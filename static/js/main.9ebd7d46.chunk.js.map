{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonster","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UACTC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACH,mCAAML,EAAMI,QAAQE,KAApB,OACA,4BAAIN,EAAMI,QAAQG,YCLbC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SAECD,EAAMI,QAAQK,KAAI,SAAAL,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCHpBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBAAOC,KAAK,SACZZ,UAAY,SACXU,YAAaA,EACbG,SAAUF,MCoCAG,G,wDAjCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXZ,QAAS,GACTa,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEnB,QAASkB,S,oBAG5C,WAAU,IAAD,SACwBE,KAAKR,MAA7BZ,EADA,EACAA,QAASa,EADT,EACSA,YACVQ,EAAkBrB,EAAQsB,QAAO,SAAAtB,GAAO,OAC5CA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAK1B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAU,YAAY,kBACZC,aAAgB,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE3D,cAAC,EAAD,CAAU3B,QAASqB,W,GA5BTO,cCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9ebd7d46.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" \r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}  />\r\n        <h2> {props.monster.name} </h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\nexport const CardList = props => {\r\n    return <div className='card-list'>\r\n         {\r\n            props.monster.map(monster => (\r\n              <Card key={monster.id} monster ={monster}/> \r\n            ))}\r\n    </div>\r\n};","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input type=\"search\"\r\n    className = 'search'\r\n     placeholder={placeholder}\r\n     onChange={handleChange} />\r\n)","/*\n * Copyright (c) 2021 Your Company Name\n * All rights reserved.\n */\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monster: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monster: users }))\n  }\n\n  render() {\n    const {monster, searchField} = this.state;\n    const filteredMonster = monster.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n        placeholder=\"search monsters\"\n        handleChange = {e => this.setState({ searchField: e.target.value})}\n        />\n        <CardList monster={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}